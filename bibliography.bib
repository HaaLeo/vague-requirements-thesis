@article{Zelkowitz:1983,
   author = {Basili, M. V. Zelkowitz; R. Yeh; R. G. Hamlet; J. D. Gannon; and V. R.},
   title = {The Software Indus- try: A State of the Art Survey},
   journal = {Foundations of Empirical Software Engineering: The Legacy ofVictor R.Basili},
   pages = {383},
   year = {1983},
   type = {Journal Article}
}

@article{Femmer:2017,
   author = {Femmer, Henning and Méndez Fernández, Daniel and Wagner, Stefan and Eder, Sebastian},
   title = {Rapid quality assurance with Requirements Smells},
   journal = {Journal of Systems and Software},
   volume = {123},
   pages = {190-213},
   ISSN = {01641212},
   DOI = {10.1016/j.jss.2016.02.047},
   year = {2017},
   type = {Journal Article}
}

@inproceedings{Femmer:2014,
   author = {Femmer, Henning and Méndez Fernández, Daniel and Jürgens, Elmar and Klose, Michael and Zimmer, Ilona and Zimmer, Jörg},
   title = {Rapid Requirements Checks with Requirements Smells: Two Case Studies},
   DOI = {10.1145/2593812.2593817},
   year = {2014},
   type = {Conference Proceedings}
}

@article{Mendez:2006,
   author = {Fernández, D. Méndez and Wagner, S. and Kalinowski, M. and Felderer, M. and Mafra, P. and Vetrò, A. and Conte, T. and Christiansson, M. T. and Greer, D. and Lassenius, C. and Männistö, T. and Nayabi, M. and Oivo, M. and Penzenstadler, B. and Pfahl, D. and Prikladnicki, R. and Ruhe, G. and Schekelmann, A. and Sen, S. and Spinola, R. and Tuzcu, A. and de la Vara, J. L. and Wieringa, R.},
   title = {Naming the pain in requirements engineering},
   journal = {Empirical Software Engineering},
   volume = {22},
   number = {5},
   pages = {2298-2338},
   ISSN = {1382-3256
1573-7616},
   DOI = {10.1007/s10664-016-9451-7},
   year = {2016},
   type = {Journal Article}
}

@article{Hsia:1993,
   author = {Hsia, P. and Davis, A. M. and Kung, D. C.},
   title = {Status report: requirements engineering},
   journal = {IEEE Software},
   volume = {10},
   number = {6},
   pages = {75-79},
   ISSN = {0740-7459},
   DOI = {10.1109/52.241974},
   year = {1993},
   type = {Journal Article}
}

@article{Devlin:2018,
   author = {Jacob Devlin and Ming-Wei Chang and Kenton Lee and Toutanova, Kristina},
   title = {BERT: Pre-training of Deep Bidirectional Transformers forLanguage Understanding},
   journal = {CoRR},
   volume = {abs/1810.04805},
   url = {http://arxiv.org/abs/1810.04805},
   year = {2018},
   type = {Journal Article}
}

@article{Khan:2016,
   author = {Khan, W. and Daud, A. and Nasir, J. A. and Amjad, T.},
   title = {A survey on the state-of-the-art machine learning models in the context of NLP},
   journal = {Kuwait Journal of Science},
   volume = {43},
   number = {4},
   pages = {95-113},
   note = {Ef8is
Times Cited:14
Cited References Count:69},
   abstract = {Machine learning and Statistical techniques are powerful analysis tools yet to be incorporated in the new multidisciplinary field diversely termed as natural language processing (NLP) or computational linguistic. The linguistic knowledge may be ambiguous or contains ambiguity; therefore, various NLP tasks are carried out in order to resolve the ambiguity in speech and language processing. The current prevailing techniques for addressing various NLP tasks as a supervised learning are hidden Markov models (HMM), conditional random field (CRF), maximum entropy models (MaxEnt), support vector machines (SVM), Naive Bays, and deep learning (DL). The goal of this survey paper is to highlight ambiguity in speech and language processing, to provide brief overview of basic categories of linguistic knowledge, to discuss different existing machine learning models and their classification into different categories and finally to provide a comprehensive review of different state of the art machine learning models with the goal that new researchers look into these techniques and depending on these, develops advance techniques. In this survey we reviewed how avant-grademachine learning models can help in this dilemma.},
   keywords = {ambiguity
linguistic knowledge
machine learning
nlp
supervised learning
named entity recognition},
   ISSN = {2307-4108},
   url = {<Go to ISI>://WOS:000390573100011},
   year = {2016},
   type = {Journal Article}
}

@article{Mich:2004,
   author = {Mich, Luisa and Franch, Mariangela and Novi Inverardi, Pier Luigi},
   title = {Market research for requirements analysis using linguistic tools.},
   journal = {Requirements Engineering},
   volume = {9},
   pages = {40-56},
   DOI = {10.1007/s00766-003-0179-8 },
   year = {2004},
   type = {Journal Article}
}

@inproceedings{Salger:2013,
   author = {Salger, F.},
   title = {Requirements reviews revisited: Residual challenges and open research questions},
   booktitle = {2013 21st IEEE International Requirements Engineering Conference (RE)},
   pages = {250-255},
   DOI = {10.1109/RE.2013.6636725},
   year = {2013},
   type = {Conference Proceedings}
}

@article{Gleich:2010,
   author = {Gleich, B. and Creighton, O. and Kof, L.},
   title = {Ambiguity Detection: Towards a Tool Explaining Ambiguity Sources},
   journal = {Requirements Engineering: Foundation for Software Quality},
   volume = {6182},
   pages = {218-+},
   note = {Brw85
Times Cited:30
Cited References Count:19
Lecture Notes in Computer Science},
   abstract = {[Context and motivation] Natural language is the main representation means of industrial requirements documents, which implies that requirements documents are inherently ambiguous. There exist guidelines for ambiguity detection, such as the Ambiguity Handbook [1]. In order to detect ambiguities according to the existing guidelines, it is necessary to train analysts.
[Question/problem] Although ambiguity detection guidelines were extensively discussed in literature, ambiguity detection has not been automated yet. Automation of ambiguity detection is one of the goals of the presented paper. More precisely, the approach and tool presented in this paper have three goals: (I) to automate ambiguity detection, (2) to make plausible for the analyst that ambiguities detected by the tool represent genuine problems of the analyzed document, and (3) to educate the analyst by explaining the sources of the detected ambiguities.
[Principal ideas/results] The presented tool provides reliable ambiguity detection, in the sense that it detects four times as many genuine ambiguities as than an average human analyst. Furthermore, the tool offers high precision ambiguity detection and does not present too many false positives to the human analyst.
[Contribution] The presented tool is able both to detect the ambiguities and to explain ambiguity sources. Thus, besides pure ambiguity detection, it can be used to educate analysts, too. Furthermore, it provides a significant potential for considerable time and cost savings and at the same time quality improvements in the industrial requirements engineering.},
   keywords = {requirements analysis
ambiguity detection
natural language processing
requirements
identification},
   ISSN = {0302-9743},
   url = {<Go to ISI>://WOS:000283806700020},
   year = {2010},
   type = {Journal Article}
}

