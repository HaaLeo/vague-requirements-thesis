% Encoding: UTF-8

@InProceedings{DAmbros2010,
	Author = {Marco D'Ambros and Michele Lanza and Romain Robbes},
	Booktitle = {Proceedings of MSR 2010 (7th IEEE Working Conference on Mining Software Repositories)},
	Pages = {31 - 41},
	Publisher = {IEEE CS Press},
	Title = {An Extensive Comparison of Bug Prediction Approaches},
	Year = {2010},
  doi       = {10.1109/msr.2010.5463279},
}

@Book{Myers2004,
  title     = {The Art of Software Testing},
  publisher = {Wiley},
  year      = {2004},
  author    = {Myers, G.J. and Sandler, C. and Badgett, T. and Thomas, T.M.},
  series    = {Business Data Processing: A Wiley Series},
  isbn      = {9780471678359},
  url       = {https://books.google.de/books?id=86rz6UExDEEC},
}

@Book{Beizer1990,
 author = {Beizer, Boris},
 title = {Software Testing Techniques (2Nd Ed.)},
 year = {1990},
 isbn = {0-442-20672-0},
 publisher = {Van Nostrand Reinhold Co.},
 address = {New York, NY, USA},
}

@book{Ammann2008,
 abstract = {Teaches students an innovative and successful approach to software testing. Resources for instructors (e.g. PowerPoint slides, solutions) on supporting website},
 author = {Ammann, Paul and Offutt, Jeff},
 year = {2008},
 title = {Introduction to software testing},
 url = {http://site.ebrary.com/lib/alltitles/docDetail.action?docID=10224557},
 address = {Cambridge},
 edition = {1. publ},
 publisher = {{Cambridge Univ. Press}},
 isbn = {978-0-521-88038-1}
}

@inproceedings{Lewis2013,
 author = {Lewis, Chris and Lin, Zhongpeng and Sadowski, Caitlin and Zhu, Xiaoyan and Ou, Rong and Whitehead Jr., E. James},
 title = {Does Bug Prediction Support Human Developers? Findings from a Google Case Study},
 booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
 series = {ICSE '13},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 location = {San Francisco, CA, USA},
 pages = {372--381},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=2486788.2486838},
 acmid = {2486838},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@INPROCEEDINGS{Hassan2009,
  author={A. E. {Hassan}},
  booktitle={2009 IEEE 31st International Conference on Software Engineering},
  title={Predicting faults using the complexity of code changes},
  year={2009},
  volume={},
  number={},
  pages={78-88},
  keywords={program diagnostics;program verification;software fault tolerance;software metrics;fault prediction;code changes complexity;fault incidence;complexity measurement;complexity metrics;code change process;Software systems;Predictive models;Software measurement;Delay;History;Lab-on-a-chip;Information theory;Entropy;Project management},
  doi={10.1109/ICSE.2009.5070510},
  ISSN={0270-5257},
  month={May}
}

@INPROCEEDINGS{Kim2007,
  author={S. {Kim} and T. {Zimmermann} and E. J. {Whitehead Jr.} and A. {Zeller}},
  booktitle={29th International Conference on Software Engineering (ICSE'07)},
  title={Predicting Faults from Cached History},
  year={2007},
  volume={},
  number={},
  pages={489-498},
  keywords={cache storage;software fault tolerance;7 software system version history;fault-prone location prediction;resource validation;resource verification;cache history;History;Software quality;Fault diagnosis;Prediction algorithms;Software algorithms;Switches;Isolation technology;Software systems;Fault detection;Open source software},
  doi={10.1109/ICSE.2007.66},
  ISSN={0270-5257},
  month={May}
}

@book{Bishop2009,
 author = {Bishop, Christopher M.},
 year = {2009},
 title = {Pattern recognition and machine learning},
 price = {hardback : EUR 75,92},
 address = {New York, NY},
 edition = {Corrected at 8th printing 2009},
 publisher = {Springer},
 isbn = {0-387-31073-8},
 series = {Information science and statistics}
}

@InProceedings{Giger2012,
  author    = {Emanuel Giger and Marco D{\textquotesingle}Ambros and Martin Pinzger and Harald C. Gall},
  title     = {Method-level bug prediction},
  booktitle = {Proceedings of the {ACM}-{IEEE} international symposium on Empirical software engineering and measurement - {ESEM} {\textquotesingle}12},
  year      = {2012},
  publisher = {{ACM} Press},
  doi       = {10.1145/2372251.2372285},
}

@Article{Nucci2018,
  author    = {Dario Di Nucci and Fabio Palomba and Giuseppe De Rosa and Gabriele Bavota and Rocco Oliveto and Andrea De Lucia},
  title     = {A Developer Centered Bug Prediction Model},
  journal   = {{IEEE} Transactions on Software Engineering},
  year      = {2018},
  volume    = {44},
  number    = {1},
  pages     = {5--24},
  month     = {jan},
  doi       = {10.1109/tse.2017.2659747},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@Article{Ostrand2005,
  author    = {T.J. Ostrand and E.J. Weyuker and R.M. Bell},
  title     = {Predicting the location and number of faults in large software systems},
  journal   = {{IEEE} Transactions on Software Engineering},
  year      = {2005},
  volume    = {31},
  number    = {4},
  pages     = {340--355},
  month     = {apr},
  doi       = {10.1109/tse.2005.49},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@InProceedings{Moser2008,
  author    = {Raimund Moser and Witold Pedrycz and Giancarlo Succi},
  title     = {A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction},
  booktitle = {Proceedings of the 13th international conference on Software engineering - {ICSE} {\textquotesingle}08},
  year      = {2008},
  publisher = {{ACM} Press},
  doi       = {10.1145/1368088.1368114},
}

@Article{Malhotra2015,
  author    = {Ruchika Malhotra},
  title     = {A systematic review of machine learning techniques for software fault prediction},
  journal   = {Applied Soft Computing},
  year      = {2015},
  volume    = {27},
  pages     = {504--518},
  month     = {feb},
  doi       = {10.1016/j.asoc.2014.11.023},
  publisher = {Elsevier {BV}},
}

@InProceedings{Nagappan2005,
  author    = {Nachiappan Nagappan und Thomas Ball},
  title     = {Use of relative code churn measures to predict system defect density},
  booktitle = {Proceedings of the 27th international conference on Software engineering - {ICSE} {\textquotesingle}05},
  year      = {2005},
  publisher = {{ACM} Press},
  doi       = {10.1145/1062455.1062514},
}

@Article{Bishnu2012,
  author    = {Partha S. Bishnu und Vandana Bhattacherjee},
  title     = {Software Fault Prediction Using Quad Tree-Based K-Means Clustering Algorithm},
  journal   = {{IEEE} Transactions on Knowledge and Data Engineering},
  year      = {2012},
  volume    = {24},
  number    = {6},
  pages     = {1146--1150},
  month     = {jun},
  doi       = {10.1109/tkde.2011.163},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@InProceedings{Jiang2007,
  author    = {Yue Jiang and Bojan Cukic and Tim Menzies},
  title     = {Fault Prediction using Early Lifecycle Data},
  booktitle = {The 18th {IEEE} International Symposium on Software Reliability ({ISSRE} {\textquotesingle}07)},
  year      = {2007},
  month     = {nov},
  publisher = {{IEEE}},
  doi       = {10.1109/issre.2007.24},
}

@InProceedings{Bergstra2013,
  title = 	 {Making a Science of Model Search: Hyperparameter Optimization in Hundreds of Dimensions for Vision Architectures},
  author = 	 {James Bergstra and Daniel Yamins and David Cox},
  booktitle = 	 {Proceedings of the 30th International Conference on Machine Learning},
  pages = 	 {115--123},
  year = 	 {2013},
  editor = 	 {Sanjoy Dasgupta and David McAllester},
  volume = 	 {28},
  number =       {1},
  series = 	 {Proceedings of Machine Learning Research},
  address = 	 {Atlanta, Georgia, USA},
  month = 	 {17--19 Jun},
  publisher = 	 {PMLR},
  pdf = 	 {http://proceedings.mlr.press/v28/bergstra13.pdf},
  url = 	 {http://proceedings.mlr.press/v28/bergstra13.html},
  abstract = 	 {Many computer vision algorithms depend on configuration settings that are typically hand-tuned in the course of evaluating the algorithm for a particular data set. While such parameter tuning is often presented as being incidental to the algorithm, correctly setting these parameter choices is frequently critical to realizing a methodâ€™s full potential. Compounding matters, these parameters often must be re-tuned when the algorithm is applied to a new problem domain, and the tuning process itself often depends on personal experience and intuition in ways that are hard to quantify or describe. Since the performance of a given technique depends on both the fundamental quality of the algorithm and the details of its tuning, it is sometimes difficult to know whether a given technique is genuinely better, or simply better tuned.     In this work, we propose a meta-modeling approach to support automated hyperparameter optimization, with the goal of providing practical tools that replace hand-tuning with a reproducible and unbiased optimization process. Our approach is to expose the underlying expression graph of how a performance metric (e.g. classification accuracy on validation examples) is computed from hyperparameters that govern not only how individual processing steps are applied, but even which processing steps are included.  A hyperparameter optimization algorithm transforms this graph into a program for optimizing that performance metric.  Our approach yields state of the art results on three disparate computer vision problems: a face-matching verification task (LFW), a face identification task (PubFig83) and an object recognition task (CIFAR-10), using a single broad class of feed-forward vision architectures.  }
}

@ARTICLE{Gyimothy2005,
author={T. {Gyimothy} and R. {Ferenc} and I. {Siket}},
journal={IEEE Transactions on Software Engineering},
title={Empirical validation of object-oriented metrics on open source software for fault prediction},
year={2005},
volume={31},
number={10},
pages={897-910},
keywords={software metrics;object-oriented programming;object-oriented methods;public domain software;formal verification;fault diagnosis;software fault tolerance;software quality;database management systems;object-oriented metrics;open source software;fault prediction;software quality;software reliability;fault-proneness detection;open source Web;Mozilla;Bugzilla bug database;Open source software;Quality management;Software development management;Computer industry;Fault detection;Electronic mail;Computer bugs;Object oriented databases;Learning systems;Software systems;Index Terms- Fact extraction;metrics validation;reverse engineering;open source software;fault-proneness detection;Mozilla;Bugzilla;C++;compiler wrapping;Columbus.},
doi={10.1109/TSE.2005.112},
ISSN={0098-5589},
month={Oct},}

@Comment{jabref-meta: databaseType:bibtex;}
